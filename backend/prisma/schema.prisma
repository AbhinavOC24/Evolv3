// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}


model User {
  id        String   @id @default(cuid())
  wallet    String   @unique
  joinedAt  DateTime @default(now())


  collections Collection[] @relation("CreatorCollections")


  nfts UserNFT[]


}

model Collection {
  id              String   @id @default(cuid())
  contractAddress String   @unique
  creatorId       String
  name            String    
  symbol          String   
  description     String
  metadataURI     String
  coverImage      String?
  createdAt       DateTime @default(now())

  creator   User     @relation("CreatorCollections", fields: [creatorId], references: [id])
  entries   Entry[]
  nfts      UserNFT[]
  @@unique([name, symbol]) 

}

model Entry {
  id            String   @id @default(cuid())
  collectionId  String
  entryIndex    Int
  cid           String
  mediaType     String?
  title         String?

  createdAt     DateTime @default(now())

  collection Collection @relation(fields: [collectionId], references: [id])

    @@unique([collectionId, entryIndex]) 

}

model UserNFT {
  id            String   @id @default(cuid())
  userId        String
  collectionId  String
  tokenId       Int
  mintedAt      DateTime @default(now())

  user       User       @relation(fields: [userId], references: [id])
  collection Collection @relation(fields: [collectionId], references: [id])
    @@unique([collectionId, tokenId]) 

}
